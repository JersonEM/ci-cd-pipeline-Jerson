name: CI/CD Pipeline Avanzado

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20, 22]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npx vitest run

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: |
          mkdir build
          echo "<h1>Deploy exitoso</h1>" > build/index.html
      - name: Subir artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Descargar build
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: public/

      - name: Verificar contenido descargado (opcional)
        run: ls -l public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public/
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - name: Crear issue en caso de error
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "ERROR‚ùå: Fallo en el despliegue de staging",
              body: "Hubo un error en el job de deploy del pipeline.\nRevisar: https://github.com/${context.repo.owner}/${context.repo.repo}/actions"
            });
